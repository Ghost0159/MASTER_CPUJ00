//==============================================================================
/**
 *
 * GDSボックスショット
 *
 */
//==============================================================================
#ifndef __GT_GDS_BOXSHOT_H__
#define __GT_GDS_BOXSHOT_H__


#include "gds_define.h"
#include "gds_profile_local.h"


//==============================================================================
//	定数定義
//==============================================================================
///ボックス名のサイズ(EOM込み)
#define GT_PLW_BOX_TRAYNAME_SIZE	(20)
///ボックス内の最大ポケモン数
#define GT_PLW_BOX_MAX_POS			(30)


//==============================================================================
//	型定義
//==============================================================================

//--------------------------------------------------------------
/**
 *	ボックスショット
 *		380byte + 予備32byte = 412byte
 */
//--------------------------------------------------------------
typedef struct {
	GT_STRCODE box_name[GT_PLW_BOX_TRAYNAME_SIZE];	///< ボックス名			40

	u16 monsno[GT_PLW_BOX_MAX_POS];			///< ポケモン番号				60
	
	u32 personal_rnd[GT_PLW_BOX_MAX_POS];	///< 個性乱数					120
	u32	id_no[GT_PLW_BOX_MAX_POS];			///< IDNo						120
//	u8 egg_flg[PLW_BOX_MAX_POS];
	u32 egg_bit;							///< タマゴフラグ(1bit=1匹)		4

	u8 form_no[GT_PLW_BOX_MAX_POS];			///< フォルム番号				30

	u8 wallPaper;							///< 壁紙の種類
	u8 category_no;							///< 登録カテゴリー


	u8 work[32];							///< 予備						32
	
	GT_GDS_CRC crc;							///< CRC						4
}GT_BOX_SHOT;

//--------------------------------------------------------------
/**
 *	送信データ：ボックスショット
 *		540byte
 */
//--------------------------------------------------------------
typedef struct{
	GT_GDS_PROFILE profile;
	GT_BOX_SHOT box_shot;
}GT_BOX_SHOT_SEND;

//--------------------------------------------------------------
/**
 *	受信データ：ボックスショット
 *		540byte
 */
//--------------------------------------------------------------
typedef struct{
	GT_GDS_PROFILE profile;
	GT_BOX_SHOT box_shot;
}GT_BOX_SHOT_RECV;


#endif	//__GT_GDS_BOXSHOT_H__

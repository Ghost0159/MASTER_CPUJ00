///////////////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////
#ifndef __SOAP_H__
#define __SOAP_H__


#if defined(__cplusplus)
extern "C"
{
#endif


///////////////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////
#include "nonport.h"
#include "gsoap/stdsoap2.h"


///////////////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////
// GameSpy additions to soap error codes (see stdsoap2.h 811)
#define SOAP_SNSYSTEM_REGTHREADERROR 253 // for sn_systems 
#define SOAP_TIMEDOUT  254
#define SOAP_CANCELED  255
typedef gsi_i32 GSSoapResult;


///////////////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////
typedef int(*GSSoapFunc)(struct soap *theSoap, const char *theURL, const char*theService, void *theRequestData, void *theResponseData);
typedef void(*GSSoapCallbackFunc)(GSSoapResult theSoapResult, void *theRequestData, void *theResponseData, void *theUserData);


///////////////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////
typedef struct 
{
	GSSoapFunc mSoapFunc;
	GSSoapCallbackFunc mCallbackFunc;
	const char *mURL;
	const char *mService;
	void *mNamespaces;
	void *mRequestData;
	void *mResponseData;
	void *mUserData;

	gsi_time mSoapTimeoutMs; // handled by soap
	gsi_i32 mIsRunning;
	gsi_i32 mIsCanceled;

	GSIThreadID mThreadID;
	GSISemaphoreID mShutdownSemaphoreID; // thread won't die until this is signaled

	GSSoapResult mSoapResult;
} GSSoapTask;


///////////////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////
// Execute a soap call (Uses GameSpy core object)
void gsiExecuteSoap(GSSoapFunc theFunc, const char *theURL, const char *theService,
					void *theNamespaces, void *theRequestData, void *theResponseData,
					 GSSoapCallbackFunc theCallbackFunc, gsi_time theTimeoutMs, 
					 void *theUserData);



///////////////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////
#if defined(__cplusplus)
} // extern "C"
#endif

#endif // __SOAP_H__
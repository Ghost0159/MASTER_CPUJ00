###############################################################################
   changelog_old.txt

   $Date: 2006/03/17 01:07:54 $
###############################################################################

※このドキュメントは正式リリース前の変更履歴です。正式リリース後の変更履歴は、
　関数リファレンスマニュアルから参照してください。

開発上の注意するべき変更点を挙げていきます。

+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++

+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
2005-12-27
・DWC_LoginAsync()の１つ目の引数を、ゲーム内スクリーンネームとして使うことに
　なりました。引数の型が const u8 * から const u16 * に変わっています。
　また、ここには必ずNULL以外のワイド文字列を設定して下さい。
　NULLを指定指定した場合はFALSEを返し、ログイン処理を行いません。

+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
2005-10-11
・ゲーム固有のエラー表示のみで、特に初期化処理等を行わなくても良いエラー
　DWC_ERROR_FRIENDS_SHORTAGE
  DWC_ERROR_NOT_FRIEND_SERVER
  DWC_ERROR_MO_SC_CONNECT_BLOCK
　については、エラー発生時のエラーコードとして 0 を設定するよう変更しました。
　今までは、DWC_ERROR_FRIENDS_SHORTAGE の場合は 0 でしたが、
　残る２つの場合は -80000 となっていました。

+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
2005-10-05
・DWCi_ConnectToFriendsAsync()呼び出し時に、GameSpy上のバディ登録済み友達が
　最低必要人数揃っていなければ、DWC_ERROR_FRIENDS_SHORTAGE のエラーを
　返すようになっていましたが、マッチング開始後に友達がログインし、バディが
　成立するかもしれないので、この場合はエラーを返さないようにしました。
　マッチング中に全てのバディ関係が成立してもまだ最低必要人数に足りない場合は、
　今まで通り本関数呼び出し時にDWC_ERROR_FRIENDS_SHORTAGE のエラーを返します。

+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
2005-10-03
・今まで、マッチング時に他ホストから自分を見つけてもらう為の情報
　（以下ホストデータと呼びます）は、ログイン時にGameSpyサーバに登録し、
　以後DWC_ShutdownFriendsMatch()が呼ばれるまでそのままにしていましたが、
　サーバ負荷軽減の為、サーバクライアント型マッチング以外のマッチングタイプでは、
　マッチングが完了したらこのホストデータをGameSpyサーバから消去するよう変更しました。
　DWCi_ConnectToAnybodyAsync()、もしくはDWCi_ConnectToFriendAsync()が
　呼ばれたら、自動的にホストデータがGameSpyサーバに登録されます。
　
　ただ、GameSpyサーバへホストデータを登録してから、他のホストがその情報を
　見られるようになるには、最低でも１５秒程度はかかる為、ゲーム側で都合の良い
　タイミングで自ホスト情報を登録できる関数
　BOOL DWC_RegisterMatchingStatus(void)
　を用意しました。

  ログイン時にホストデータがGameSpyサーバに登録され、DWC_ShutdownFriendsMatch()
　を呼んだ時に消去される仕様は変わっていません。

+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
2005-09-26
・DWC_ConnectToAnybodyAsync()の引数 addFilter は、文字列へのポインタを取って、
　ライブラリ内ではポインタのみ保持するようにしていましたが、
　文字列をコピーしてライブラリ内で保持するように変更しました。

・DWC_AddMatchKeyInt()、DWC_AddMatchKeyString()の引数 keyString も、
　文字列へのポインタを取って、ライブラリ内ではポインタのみ保持する
　ようにしていましたが、文字列をコピーしてライブラリ内で保持するように
　変更しました。
　引数 valueSrc については、今まで通り、ライブラリ内ではポインタのみ
　保持しています。

+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
2005-09-21
・コネクションのハードクローズ関数DWC_CloseAllConnectionsHard()を用意しました。
　この関数はDWC_CloseConnectionAsync()と違い、関数内でクローズ処理が完了し、
　関数を抜ける前にコールバックが返ってきます。
　これ以降は、DWC_CloseConnectionAsync()も使用できますが、サポート対象外と
　なりますので、DWC_CloseAllConnectionsHard()をお使い下さい。

・マッチングキャンセル関数DWC_CancelMatching()を用意しました。
　この関数はDWC_CancelMatchingAsync()と違い、関数内でキャンセル処理が完了し、
　関数を抜ける前にマッチング完了コールバックが返ってきます。
　DWC_CancelMatchingAsync()も残していますが、DWC_CancelMatching()と同じ処理と
　なっています。

・これ以前のバージョンとはマッチングできません。

+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
2005-09-15
・DWC_CloseConnectionsAsync()を、intの戻り値を返すように変更しました。
　詳細はNitroDWC/include/base/dwc_main.h の関数説明コメントを御覧下さい。

・コネクションを強制切断関数
　int DWC_CloseConnectionHard(u8 aid)
　int DWC_CloseConnectionHardBitmap(u32* bitmap) 
　を追加しました。
　電源が切られたなどの理由で通信不能になったホストとのコネクションを
　クローズする際に使用します。
　詳細はNitroDWC/include/base/dwc_main.h の関数説明コメントを御覧下さい。
　これらの関数では、関数を抜ける前に必ずclosedコールバックが返ってくることに
　注意して下さい！！

・今まで、ビットマップ送信関数で、自分のAIDのビットも立てたビットマップを
　引数として渡すと、自分のビットだけ0になったビットマップが戻り値として
　返していましたが、これを自分のビットは変化させないように変更しました。
　元々自分への送信は行いません。

+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
2005-09-12
・友達リスト消去コールバックDWCDeleteFriendListCallbackにおいて、
　消された友達リストの友達リストインデックスのみ返すようにしていましたが、
　消されたものと同じと判定された友達データの、友達リストインデックスも
　渡すようにしました。
　void (*DWCDeleteFriendListCallback)(int deletedIndex, int srcIndex, void* param);
　２つ以上の同じ友達データが友達リスト内にあった場合、通常友達リストの後ろに
　あったものが消去されます。
　ただし、同じ友達データであっても、一方がGameSpy上のバディ成立済みで、
　もう一方が未成立状態であれば、必ず未成立状態の友達データが消去されます。

+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
2005-09-09
・DWC_ConnectToAnybodyAsync()の引数addFilterに設定できる文字列の最大長が、
　144文字から127文字に減りました。

+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
2005-09-07
・Metrowerks CodeWarrior 1.2 SP2を使用すると、DWCi_ProcessRecvMatchCommand()関
  数のTHUMB_ROMビルドに失敗します（テーブルジャンプのテーブル参照の計算が間違っ
  ている）。ご注意ください。

+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
2005-09-06
・Debug/Releaseビルド時に、Transport用の遅延シミュレーションバッファがリークを
  起こしていた問題を修正しました。

・DWC_LoginAsyncを呼び出したあと、特定の状態でDWC_ShutdownFriendsMatch()を呼び
  出したときにARM9が不正終了する問題を修正しました。

+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
2005-09-03
・DWC_GetFriendStatus(), DWC_GetFriendStatusSC() の引数を、「友達リストへのポイ
  ンタ＋友達リスト長」から、「友達データへのポインタ」に変更しました。友達リス
  ト系の関数をなくしたことに対応して変更しました。

・GameSpyプロファイルIDが引数に含まれていた以下のコールバックについて、プロファ
  イルIDではなく、友達リストインデックスを返すように変更しました。
  ・DWCMatchedSCCallback：サーバクライアント型マッチング完了コールバック
  ・DWCNewClientCallback：サーバクライアント型マッチング新規接続開始通知コールバック
  ・DWCConnectionClosedCallback：コネクションクローズコールバック
  対象のプレイヤー（新たに接続してきたプレイヤー、コネクションをクローズしたプ
  レイヤー）が、自分の友達なら友達リストのインデックス、友達でなければ -1 が返
  されます。
  ※どちらもint型で、コンパイルエラーは出ないので、気を付けて下さい。

・friendList操作系外部関数 DWC_SetFriendDataToList(), 
  DWC_SetGsProfileIDToList(), DWC_DeleteFriendFromList()を消去しました。友達デ
  ータ単体へのアクセス関数が、NitroDWC/include/base/dwc_account.h（ソースは
  NitroDWC/libraries/account/dwc_account.c）に用意されています。

・GameSpyプロファイルIDを直接扱う関数 DWC_GetProfileIDFromList(), 
  DWC_GetFriendListIndex() を内部関数に変更しました。アプリケーションでは、通常
  GamseSpyプロファイルID直接扱う必要はありません。

・友達データが有効かどうかのチェック関数DWC_IsValidFriendData() が新たに用意さ
  れました。過去との互換性のため、内部関数DWCi_Acc_IsValidFriendData() もそのま
  ま残されています。

・MP交換友達データから友達のGameSpyプロファイルIDを取得する際に、友達がまだ一度
  もログインしていなかった時に不具合が発生していたのを修正しました。

・友達リスト同期更新時に友達データが消去されても、リストを前詰めしないように変
  更しました。それに伴い、前詰めを前提としていた処理を修正しました。ライブラリ
  内での友達データ消去は、MP友達データ交換による友達登録と、友達交換鍵による登
  録を、同じ人との間で両方行わなければ発生しません。

・バディリクエスト受信時の承認処理を、最終仕様に合わせました。今までは、MP交換
  友達データしか登録していない友達から、バディ登録要求が来ても無視していました
  が、ちゃんと自分の友達ならバディ関係を成立させるようにしました。

+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
2005-09-02
・DWC_StartUtilityEx()の第3引数に適切な引数を指定しなければ、機能しなくなりまし
  た。

・NitroWiFiのWCMの仕様変更に対応しました。NitroWiFi-20050902版以降が必須となり
  ます。

・PR2リリース
+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
